import numpy as np
import scipy.constants as sc
from scipy.fft import fft,ifft,fftfreq
import matplotlib.pyplot as plt
from numpy import linalg as LA
import warnings
warnings.simplefilter('ignore')
N = 1001 # number of x values

m = 1 # mass of particle

w = 1.0 #angular frequency

dt = -0.1j*sc.hbar #imaginary time propagation

T = 1.0/100 #sample spacing

x = np.linspace(-N*T/2,N*T/2,N) #setting the x values

k = fftfreq(len(x),T) # setting the k values



V = 0.5*m*(w*x)**2 # harmonic potential array

psi =np.cos(x) #np.exp((-x**2)/1*sc.hbar) #initial guess of gaussian

exp_V = np.exp(-1j*dt*V/(2*sc.hbar)) # combining exp(V) and (imaginary) time propagation

exp_T = np.exp((-1j*sc.hbar*dt*k**2)/2*m) # combining exp(T) and (imaginary) time propagation

for i in range(50):

    psi = exp_V*ifft(exp_T*fft(exp_V*psi)) # loop that applies the split step time method

psi /= LA.norm(psi) #normalisation


gnd_state = np.exp((-m*w*np.pi*x**2))
gnd_state /= LA.norm(gnd_state)
diff = psi-gnd_state
print(diff)


plt.plot(x,psi, label ="numerical ground state")
plt.plot(x,gnd_state, label ="true ground state")
plt.xlabel('position (m)')
plt.ylabel('psi')    
plt.legend()
plt.title('Psi against position')
plt.show() # plots psi against x

    
